@use "~@/lib/common/styles/hack-variables.scss" as variables;

/* reset */
.header {
  button,
  p {
    all: unset;
  }

  padding: 16px;
  background: variables.$blue-gradient;
  display: flex;
  justify-content: space-between;
}

.logo {
  width: 50px;
  height: 50px;
}

.root {
  position: relative;
  display: flex;
  justify-content: center;
  width: 100%;
  z-index: 1;
}

.list {
  display: flex;
  justify-content: center;
  padding: 4px;
  border-radius: 6px;
  list-style: none;
  box-shadow: 0 2px 10px var(--blackA7);
  margin: 0;
}

.trigger,
.link {
  outline: none;
  user-select: none;
  padding: 8px 32px;
  color: #fff;
  opacity: 0.8;
  transition: opacity 100ms ease-in-out;

  &:focus {
    opacity: 1;
  }

  &:hover {
    opacity: 1;
  }
}

.trigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.link {
  display: block;
  text-decoration: none;
  font-size: 20px;
  font-weight: 400;
  line-height: 1;
}

.content {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;

  @media only screen and (min-width: 600px) {
    width: auto;
  }

  &[data-motion="from-start"] {
    animation-name: enterFromLeft;
  }

  &[data-motion="from-end"] {
    animation-name: enterFromRight;
  }

  &[data-motion="to-start"] {
    animation-name: exitToLeft;
  }

  &[data-motion="to-end"] {
    animation-name: exitToRight;
  }
}

.indicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 1;
  transition: width, transform 250ms ease;

  &[data-state="visible"] {
    animation: fadeIn 200ms ease;
  }

  &[data-state="hidden"] {
    animation: fadeOut 200ms ease;
  }
}

.viewport {
  position: relative;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  background-color: white;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 300ms ease;

  &[data-state="open"] {
    animation: scaleIn 200ms ease;
  }

  &[data-state="closed"] {
    animation: scaleOut 200ms ease;
  }

  @media only screen and (min-width: 600px) {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.items {
  display: grid;
  padding: 22px;
  margin: 0;
  column-gap: 10px;
  list-style: none;

  @media only screen and (min-width: 600px) {
    &.one {
      width: 500px;
      grid-template-columns: 0.75fr 1fr;
    }
    &.two {
      width: 600px;
      grid-auto-flow: column;
      grid-template-rows: repeat(3, 1fr);
    }
  }
}

.listItemLink {
  display: block;
  outline: none;
  text-decoration: none;
  user-select: none;
  padding: 12px;
  border-radius: 6px;
  font-size: 15px;
  line-height: 1;

  &:focus {
    box-shadow: 0 0 0 2px var(--violet7);
  }

  &:hover {
    background-color: var(--mauve3);
  }
}

.listItemHeading {
  font-weight: 500;
  line-height: 1.2;
  margin-bottom: 5px;
  color: var(--violet12);
}

.listItemText {
  color: var(--mauve11);
  line-height: 1.4;
  font-weight: initial;
}

.callout {
  display: flex;
  justify-content: flex-end;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, var(--purple9) 0%, var(--indigo9) 100%);
  border-radius: 6px;
  padding: 25px;
  text-decoration: none;
  outline: none;
  user-select: none;

  &:focus {
    box-shadow: 0 0 0 2px var(--violet7);
  }
}

.calloutHeading {
  color: white;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.2;
  margin-top: 16px;
  margin-bottom: 7px;
}

.calloutText {
  color: var(--mauve4);
  font-size: 14px;
  line-height: 1.3;
}

.viewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.arrow {
  position: relative;
  top: 70%;
  background-color: white;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  border-top-left-radius: 2px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
